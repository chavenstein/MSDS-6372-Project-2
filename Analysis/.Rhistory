pch=as.numeric(as.factor(unique(Species))))
#load Statistical Sleuth datasets
library(Sleuth3)
crabs <- ex0722
attach(crabs)
#create the plot and include a legend
plot(Height,log(Force),col=as.factor(Species),pch=as.numeric(as.factor(Species)))
legend("topleft",as.vector(unique(Species)),col=as.factor(unique(Species)),
pch=as.numeric(as.factor(unique(Species))))
#create the plot and include a legend
plot(Height,log(Force),col=as.factor(Species),pch=as.numeric(as.factor(Species)), main="Claw Closing Log Force vs. Propodus Height")
legend("topleft",as.vector(unique(Species)),col=as.factor(unique(Species)),
pch=as.numeric(as.factor(unique(Species))))
?ex0722
#create the plot and include a legend
plot(Height,log(Force),col=as.factor(Species),pch=as.numeric(as.factor(Species)), main="Log Claw Closing Force vs. Propodus Height")
legend("topleft",as.vector(unique(Species)),col=as.factor(unique(Species)),
pch=as.numeric(as.factor(unique(Species))))
logfit <- lm(log(Force)~Height*Species)
plot(logfit)
summary(logfit)
summary(logfit)
newType <- relevel(Type,ref="Lophopanopeus bellus")
newType <- relevel(Species,ref="Lophopanopeus bellus")
#created a new level for adding a reference level.
newType <- relevel(Species,ref="Lophopanopeus bellus")
logfit2 <- lm(log(Force)~Height*newType)
par(mfrow=c(2,2))
plot(logfit)
anova(logfit)
summary(logfit)
plot(logfit2)
summary(logfit2)
summary(logfit2)
hist(logfit2)
hist(logfit2)
par(mfrow=c(2,2))
plot(logfit2)
hist(logfit2$residuals)
par(mfrow=c(2,2))
par(mfrow=c(1,1))
hist(logfit2$residuals)
?hist
hist(logfit2$residuals, breaks= c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2))
hist(logfit2$residuals, breaks= c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5))
?hist
hist(logfit2$residuals, breaks= c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5))
hist(logfit2$residuals, breaks= c(-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5))
hist(logfit2$residuals, breaks= c(-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5))
hist(logfit2$residuals, breaks= c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5))
?hist
hist(logfit2$residuals, freq=false, breaks= c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5))
hist(logfit2$residuals, freq=FALSE, breaks= c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5))
library(lattice)
histogram(logfit2$residuals)
?histogram
histogram(logfit2$residuals, breaks= c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5)))
histogram(logfit2$residuals, breaks= c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5))
histogram(logfit2$residuals, breaks= c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9))
histogram(logfit2$residuals, breaks= c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2))
histogram(logfit2$residuals, breaks= c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5))
?histogram
histogram(logfit2$residuals, endpoints=c(-1.2,1.5), nint=10, breaks= c(endpoints, nint))
histogram(logfit2$residuals, breaks= c(endpoints=c(-1.2,1.5), nint=10))
?histogram
histogram(logfit2$residuals, breaks= do.break(endpoints=c(-1.2,1.5), nint=10))
histogram(logfit2$residuals, breaks= do.breaks(endpoints=c(-1.2,1.5), nint=10))
?histogram
histogram(logfit2$residuals, breaks= do.breaks(endpoints=c(-1.2,1.5), nint=10), xlab="Residual",ylab="Percent")
histogram(logfit2$residuals, breaks= do.breaks(endpoints=c(-1.2,1.5), nint=10), xlab="Residual",ylab="Percent", main="Distribution of Residuals for Log_Force")
histogram(logfit2$residuals, breaks= do.breaks(endpoints=c(-1.2,1.5), nint=10), xlab="Residual",ylab="Percent", main="Distribution of Residuals for Log_Force")
hist(logfit2$residuals, freq=FALSE, breaks= c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5))
histogram(logfit2$residuals, breaks= c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5), xlab="Residual",ylab="Percent", main="Distribution of Residuals for Log_Force")
histogram(logfit2$residuals, scales=list(x=list(at=c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5))), breaks= c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5), xlab="Residual",ylab="Percent", main="Distribution of Residuals for Log_Force")
exp(-0.64346)
exp(1.31355)
exp(1.62244)
exp(0.37151)
exp(-0.16313)
exp(-0.32439)
View(crabs)
?ex0722
summary(logfit2)
summary(logfit2)
anova(logfit2)
brains <- case0902
View(brains)
View(brains)
attach(brains)
str(brains)
pairs(~Brain+Body+Gestation+Litter,data=brains)
panel.cor <- function(x, y, digits=2, prefix="", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits=digits)[1]
txt <- paste(prefix, txt, sep="")
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(~~Brain+Body+Gestation+Litter,data=brains,
lower.panel=panel.smooth, upper.panel=panel.cor,
pch=20, main="Brains Scatterplot Matrix")
brains$LogBrain <- log(Brain)
brains$LogBody <- log(Body)
brains$LogGestation <- log(Gestation)
brains$LogLitter <- log(Litter)
attach(brains)
#Scatterplot matrix with non log transformation
pairs(~~Brain+Body+Gestation+Litter,data=brains,
lower.panel=panel.smooth, upper.panel=panel.cor,
pch=20, main="Brains Scatterplot Matrix")
#Scatterplot matrix with non log transformation
pairs(~~LogBrain+LogBody+LogGestation+LogLitter,data=brains,
lower.panel=panel.smooth, upper.panel=panel.cor,
pch=20, main="Brains Scatterplot Matrix")
#Scatterplot matrix with no transformations
pairs(~~Brain+Body+Gestation+Litter,data=brains,
lower.panel=panel.smooth, upper.panel=panel.cor,
pch=20, main="Brains Scatterplot Matrix")
?case0902
View(brains)
str(brains)
View(brains)
LargeBrain <- Brain[which(Brain >150)]
LargeBrain
summary(brains)
logBrainFit <- lm(LogBrain~LogBody+LogGestation+LogLitter+LogBody*LogGestation+LogBody*LogLitter+LogGestation*LogLitter)
anova(logBrainFit)
summary(logBrainFit)
logBrainFit
logBrainFit$residuals
logBrainFit$effects
plot(logBrainFit)
anova(logBrainFit)
#The initial model is fitted, below.
logBrainFit <- lm(LogBrain~LogBody+LogGestation+LogLitter+LogBody*LogGestation+LogBody*LogLitter+LogGestation*LogLitter)
#The parameter estimates table
summary(logBrainFit)
summary(logBrainFit)
vif(logBrainFit)
?vif
library(car)
vif(logBrainFit)
str(brains)
summary(brains)
CenteredLogBody = LogBody - 2.1305
brains$CenteredLogBody = LogBody - 2.1305
brains$CenteredLogBody = LogBody - 2.1305
brains$CenteredLogGestation = LogGestation - 4.713
brains$CenteredLogLitter = LogLitter - 0.5976
attach(brains)
centeredlogBrainFit <- lm(LogBrain~CenteredLogBody+CenteredLogGestation+CenteredLogLitter+CenteredLogBody*CenteredLogGestation+CenteredLogBody*CenteredLogLitter+CenteredLogGestation*CenteredLogLitter)
summary(centeredlogBrainFit)
vif(centeredlogBrainFit)
#Create the centered log-transformed explanatory variables
brains$CenteredLogBodyLogGestation = (LogBody - 2.1305)*(LogGestation - 4.713)
brains$CenteredLogBodyLogLitter = (LogBody - 2.1305)*(LogLitter - 0.5976)
brains$CenteredLogGestationLogLitter = (LogGestation - 4.713)*(LogLitter - 0.5976)
attach(brains)
centeredlogBrainFit <- lm(LogBrain~CenteredLogBody+CenteredLogGestation+CenteredLogLitter+CenteredLogBodyLogGestation+CenteredLogBodyLogLitter+CenteredLogGestationLogLitter)
summary(centeredlogBrainFit)
vif(centeredlogBrainFit)
centeredlogBrainFit <- lm(LogBrain~LogBody+LogGestation+LogLitter+CenteredLogBodyLogGestation+CenteredLogBodyLogLitter+CenteredLogGestationLogLitter)
summary(centeredlogBrainFit)
vif(centeredlogBrainFit)
plot(centeredlogBrainFit)
par(mfrow=c(2,2))
plot(centeredlogBrainFit)
histogram(centeredlogBrainFit$residuals, xlab="Residual", main="Distribution of Residuals for Log_Force")
histogram(centeredlogBrainFit$residuals, xlab="Residual",ylab="Percent", main="Distribution of Residuals for Log_Force")
histogram(centeredlogBrainFit$residuals, scales=list(x=list(at=c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5))), breaks= c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5), xlab="Residual",ylab="Percent", main="Distribution of Residuals for Log_Force")
histogram(centeredlogBrainFit$residuals, scales=list(x=list(at=c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5))), breaks= c(-1.2,-0.9,-0.6,-0.3,0,0.3,0.6,0.9,1.2,1.5), xlab="Residual",ylab="Percent", main="Distribution of Residuals for Log_Force")
histogram(centeredlogBrainFit$residuals, xlab="Residual",ylab="Percent", main="Distribution of Residuals for Log_Force")
histogram(centeredlogBrainFit$residuals, xlab="Residual",ylab="Percent", main="Distribution of Residuals for LogBrain")
par(mfrow=c(2,2))
plot(centeredlogBrainFit)
source('C:/Users/Chris/Desktop/SMU information/MSDS 6371 - Stats for data science/Wk12/Stat1 HW12.R', echo=TRUE)
plot(centeredlogBrainFit)
histogram(centeredlogBrainFit$residuals, xlab="Residual",ylab="Percent", main="Distribution of Residuals for LogBrain")
plot(centeredlogBrainFit)
View(brains)
View(brains)
#Scatterplot matrix with no transformations
pairs(~~Brain+Gestation+Litter,data=brains,
lower.panel=panel.smooth, upper.panel=panel.cor,
pch=20, main="Brains Scatterplot Matrix")
#Transform the variables
brains$LogBrain <- log(Brain)
brains$LogBody <- log(Body)
brains$LogGestation <- log(Gestation)
brains$LogLitter <- log(Litter)
attach(brains)
#Scatterplot matrix with log transformations, this is what I chose.
pairs(~~LogBrain+LogGestation+LogLitter,data=brains,
lower.panel=panel.smooth, upper.panel=panel.cor,
pch=20, main="Brains Scatterplot Matrix")
logBrainFit <- lm(LogBrain~LogGestation+LogLitter+LogGestation*LogLitter)
summary(logBrainFit)
#The initial model is fitted, below.
logBrainFit <- lm(LogBrain~LogGestation+LogLitter+LogGestation*LogLitter)
#The parameter estimates table
summary(logBrainFit)
vif(logBrainFit)
#Load the car package
library(car)
#Then, check the vif for the model.
vif(logBrainFit)
summary(brains)
brains$CenteredLogGestationLogLitter = (LogGestation - 4.713)*(LogLitter - 0.5976)
attach(brains)
centeredlogBrainFit <- lm(LogBrain~LogGestation+LogLitter+CenteredLogGestationLogLitter)
summary(centeredlogBrainFit)
vif(centeredlogBrainFit)
plot(centeredlogBrainFit)
logBrainFit2 <- lm(LogBrain~LogGestation+LogLitter)
summary(logBrainFit2)
vif(logBrainFit2)
centeredlogBrainFit <- lm(LogBrain~LogGestation+LogLitter+CenteredLogGestationLogLitter)
plot(centeredlogBrainFit)
plot(logBrainFit2)
plot(centeredlogBrainFit)
plot(logBrainFit2)
#The second model is fitted, below.
logBrainFit2 <- lm(LogBrain~LogGestation+LogLitter)
#The parameter estimates table
summary(logBrainFit2)
#Then, check the vif for the model.
vif(logBrainFit2)
View(brains)
histogram(logBrainFit2$residuals, xlab="Residual",ylab="Percent", main="Distribution of Residuals for LogBrain")
plot(logBrainFit2)
?case0902
0.00055 * 10.819
View(brains)
anova(logBrainFit2)
install.packages("tseries")
library(tseries)
SNPdata <- get.hist.quote('^gspc',quote="Close")
SNPret <- log(lag(SNPdata)) - log(SNPdata)
SNPvol <- sd(SNPret) * sqrt(250) * 100
library(tseries)
SNPdata <- get.hist.quote('^gspc',quote="Close")
myghq <- tseries::get.hist.quote
View(myghq)
View(myghq)
myghq
SNPdata <- get.hist.quote('^gspc',quote="Close")
install.packages("tseries")
library(tseries)
sessionInfo()
-4.66334 – 26.14277(-.2) + 18.39440(-.2) + log(0.5)
-4.66334–26.14277(-.2)+18.39440(-.2)+log(0.5)
-4.66334 – 26.14277(-.2) + 18.39440(-.2) + log(0.5)
x=-4.66334 – 26.14277(-.2) + 18.39440(-.2) + log(0.5)
x=-4.66334 – 26.14277(-.2) + 18.39440(-.2) + log(0.5)
-4.66334 –26.14277(-.2) + 18.39440(-.2) + log(0.5)
-4.66334 –26.14277(-.2) + 18.39440(-.2) + log(0.5)
-4.66334 - 26.14277
-4.66334 - 26.14277(-.2)
-4.66334 - 26.14277*-.2
-4.66334 –26.14277*-.2 + 18.39440*-.2 + log(0.5)
-4.66334 –26.14277 * -.2 + 18.39440 * -.2 + log(0.5)
-4.66334 –26.14277 * -.2
-4.66334 – 26.14277 * -.2
-4.66334 - 26.14277*-.2
-4.66334 –26.14277*-.2 + 18.39440*-.2 + log(0.5)
-4.66334 –26.14277*-.2 \
-4.66334 –26.14277*-.2
-4.66334 – 26.14277*-.2 + 18.39440*-.2 + log(0.5)
-4.66334 – 26.14277*-.2
-4.66334 –26.14277*-.2
-4.66334 – 26.14277*-.2
-4.66334 – 26.14277*-.2
-4.66334 - 26.14277*-.2
-4.66334 – 26.14277*-.2 + 18.39440*-.2 + log(0.5)
-4.66334 – 26.14277*-.2
-4.66334 –26.14277*-.2
-4.66334 – 26.14277*-.2
-4.66334 – 26.14277*-.2
-4.66334 - 26.14277*-.2
18.39440*-.2 + log(0.5)
0.565214 - 4.372027
-1.10386 – 6.82377(-.2) + 1.27017(-.2) + log(0.5)
-1.10386 – 6.82377(-.2)
-1.10386 – 6.82377*-.2
-1.10386 –6.82377*-.2
-1.10386 – 6.82377*-.2
-1.10386 - 6.82377*-.2 + 1.27017*-.2 + log(0.5)
-4.66334 – 26.14277(-.2) + 18.39440(0) + log(0.5) =
-4.66334 - 26.14277*-.2 + 18.39440*0 + log(0.5)
-4.66334 - 26.14277*-.3 + 18.39440*0 + log(0.5)
-1.10386 – 6.82377(-.2) + 1.27017(0) + log(0.5)
-1.10386 - 6.82377*-.2 + 1.27017*0 + log(0.5)
-1.10386 - 6.82377*-.3 + 1.27017*0 + log(0.5)
setwd("C:\\Users\\Chris\\Desktop\\SMU information\\MSDS 6372 - Applied Statistics\\Unit 10\\Project 2\\Analysis")
getwd()
setwd("C:\\Users\\Chris\\Desktop\\SMU information\\MSDS 6372 - Applied Statistics\\Unit 10\\Project 2\\Analysis\\Data")
getwd()
# Download the GDP data from the world bank
URL <- "https://www.eia.gov/dnav/pet/xls/PET_PRI_SPT_S1_D.xls"
filepath <- "/Data/spotprices.xls"
# Assumes the working directory is /Analysis/Data/
path <- c(getwd(),filepath)
path <- paste(path, collapse = "")
# Download the spotprices.xls in its raw form and save it
# in /Analysis/Data/
download.file(url = URL, destfile = path)
# Download the GDP data from the world bank
URL <- "https://www.eia.gov/dnav/pet/xls/PET_PRI_SPT_S1_D.xls"
filepath <- "/Data/PET_PRI_SPT_S1_D.xls"
# Assumes the working directory is /Analysis/Data/
path <- c(getwd(),filepath)
path <- paste(path, collapse = "")
# Download the spotprices.xls in its raw form and save it
# in /Analysis/Data/
download.file(url = URL, destfile = path)
getwd()
setwd("C:\\Users\\Chris\\Desktop\\SMU information\\MSDS 6372 - Applied Statistics\\Unit 10\\Project 2\\Analysis")
# Download the GDP data from the world bank
URL <- "https://www.eia.gov/dnav/pet/xls/PET_PRI_SPT_S1_D.xls"
filepath <- "/Data/spotprices.xls"
# Assumes the working directory is /Analysis/Data
path <- c(getwd(),filepath)
path <- paste(path, collapse = "")
# Download the spotprices.xls in its raw form and save it
# in /Analysis/Data/
download.file(url = URL, destfile = path)
###############################################
## Gather1.R
## Sarah Fite and Chris Havenstein
## Created 10/27/2017
##
###############################################
## The goal is to get the Spot prices data for
## WTI (West Texas Intermediate oil) and for
## Europe Brent so that they can be merged with
## the Baker Huges Rig count datasets for (1st)
## the oil and gas split of drilling rigs and
## (2nd) the drilling rig type (Directional,
## Horizontal, and Vertical).
## First we need to read in the dataset from
## EIA - U.S. Energy Information Administration
# Download the GDP data from the world bank
URL <- "https://www.eia.gov/dnav/pet/xls/PET_PRI_SPT_S1_D.xls"
filepath <- "/Data/spotprices.xlsx"
# Assumes the working directory is /Analysis/
path <- c(getwd(),filepath)
path <- paste(path, collapse = "")
# Download the spotprices.xls in its raw form and save it
# in /Analysis/Data/
download.file(url = URL, destfile = path)
# Download the GDP data from the world bank
URL <- "https://www.eia.gov/dnav/pet/xls/PET_PRI_SPT_S1_D.xls"
filepath <- "/Data/PET_PRI_SPT_S1_D.xls"
# Assumes the working directory is /Analysis/
path <- c(getwd(),filepath)
path <- paste(path, collapse = "")
# Download the spotprices.xls in its raw form and save it
# in /Analysis/Data/
download.file(url = URL, destfile = path)
# Download the GDP data from the world bank
URL <- "https://www.eia.gov/dnav/pet/xls/PET_PRI_SPT_S1_D.xls"
filepath <- "/Data/spotprices.xls"
# Assumes the working directory is /Analysis/
path <- c(getwd(),filepath)
path <- paste(path, collapse = "")
# Download the spotprices.xls in its raw form and save it
# in /Analysis/Data/
download.file(url = URL, destfile = path, mode="wb")
install.packages("XLConnect")
library(XLConnect)
install.packages("xlsx")
library(xlsx)
spotprices <- read.xlsx(filepath, sheetIndex = 2)
library(xlsx)
spotprices <- read.xlsx(filepath, sheetIndex = 2)
?read.xls
?xlsx
??xlsx
library(xlsx)
system("java -version")
library(xlsx)
system()
session()
sessionInfo()
library(xlsx)
spotprices <- read.xlsx(filepath, sheetIndex = 2)
path
spotprices <- read.xlsx(path, sheetIndex = 2)
View(spotprices)
?write.csv
getwd
getwd()
path
oldwd <- getwd()
oldwd
filepath2 <- "/Data/"
filepath2 <- "/Data/"
path <- c(getwd(),filepath2)
path <- paste(path, collapse = "")
path
setwd(path)
getwd()
?write.csv
write.csv(spotprices, file = "spotprices.csv")
View(spotprices)
library(XLConnect)
filepath <- "/Data/spotprices.xls"
# Assumes the working directory is /Analysis/
path <- c(getwd(),filepath)
path <- paste(path, collapse = "")
spotprices <- readWorksheetFromFile(path, sheet = "Data 1", header = FALSE)
oldwd <- getwd()
oldwd <- getwd()
filepath <- "/Data/spotprices.xls"
# Assumes the working directory is /Analysis/
path <- c(getwd(),filepath)
path <- paste(path, collapse = "")
spotprices <- readWorksheetFromFile(path, sheet = "Data 1", header = FALSE)
path
oldwd <- getwd()
getwd()
setwd("C://Users//Chris//Desktop//SMU information//MSDS 6372 - Applied Statistics//Unit 10//Project 2//Analysis//")
getwd()
filepath <- "/Data/spotprices.xls"
# Assumes the working directory is /Analysis/
path <- c(getwd(),filepath)
path <- paste(path, collapse = "")
getwd()
path
spotprices <- readWorksheetFromFile(path, sheet = "Data 1", header = FALSE)
install.packages("openxlsx")
libary(openxlsx)
library(openxlsx)
View(spotprices)
View(spotprices)
spotprices[-2,]
View(spotprices)
oldspot <- spotprices
spotprices <- spotprices[-2,]
View(spotprices)
spotprices <- oldspot
spotprices <- spotprices[c(-1,-2),]
View(spotprices)
View(spotprices)
View(spotprices)
spotprices <- spotprices[,-4]
View(spotprices)
?colnames
colnames(spotprices) <- c("Date","WTIPrice","BrentPrice")
View(spotprices)
class(spotprices$Date)
?class
spotprices$Date <- as.numeric(spotprices$Date)
View(spotprices)
spotprices <- oldspot
View(oldspot)
spotprices <- spotprices[c(-1,-2),]
spotprices <- spotprices[,-4]
colnames(spotprices) <- c("Date","WTIPrice","BrentPrice")
Newdates  <- convertToDate(spotprices$Date,origin = "1900-01-01")
Newdates
View(oldspot)
Newdates  <- convertToDate(spotprices$Date,origin = "1986-01-02")
head(Newdates)
Newdates  <- convertToDate(spotprices$Date,origin = "1986-01-01")
head(Newdates, 20)
View(oldspot)
?convertToDate()
Newdates  <- convertToDate(spotprices$Date)
Newdates
?read.xlsx
View(oldspot)
getwd()
filepath <- "/Data/spotprices.xls"
# Assumes the working directory is /Analysis/
path <- c(getwd(),filepath)
path <- paste(path, collapse = "")
spotprices <- read.xlsx(path, sheetIndex = 2, head=TRUE, startRow = 2)
path
Newdates <- as.Date(spotprices$Date-25569, origin="1970-01-01")
spotprices <- read.xlsx(path, sheetIndex = 2, head=TRUE, startRow = 2)
spotprices <- read.xlsx(path, sheetIndex = 2)
library(xlsx)
spotprices <- read.xlsx(path, sheetIndex = 2)
path
spotprices <- read.xlsx(path, sheetIndex = 2)
URL <- "https://www.eia.gov/dnav/pet/xls/PET_PRI_SPT_S1_D.xls"
filepath <- "/Data/spotprices.xls"
# Assumes the working directory is /Analysis/
path <- c(getwd(),filepath)
path <- paste(path, collapse = "")
# Download the spotprices.xls in its raw form and save it
# in /Analysis/Data/
download.file(url = URL, destfile = path, mode="wb")
library(xlsx)
spotprices <- read.xlsx(path, sheetIndex = 2)
spotprices <- read.xlsx(path, sheetIndex = 2)
URL <- "https://www.eia.gov/dnav/pet/xls/PET_PRI_SPT_S1_D.xls"
filepath <- "/Data/spotprices.xls"
# Assumes the working directory is /Analysis/
path <- c(getwd(),filepath)
path <- paste(path, collapse = "")
# Download the spotprices.xls in its raw form and save it
# in /Analysis/Data/
download.file(url = URL, destfile = path, mode="wb")
path
library(xlsx)
spotprices <- read.xlsx(path, sheetIndex = 2)
spotprices <- readWorksheetFromFile(path, sheet = "Data 1", header = FALSE)
